user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
        worker_connections 1024;
        # multi_accept on;
}

rtmp {
    server {
        listen 1935; # 設定RTMP Port
        chunk_size 4000;
        # 設定RTMP的APP項目，RTMP的URI為: rtmp://ip:1935/live
        # 這是給直播主使用的輸入點
        application live {
            live on; # 容許輸入
            # 當收到RTMP流時，執行FFMPEG轉檔指令，其中$app參數為`live`、$name為直播軟體輸入的Stream Key(串流金鑰)
            # 以下的FFMPEG指令將會把一個輸入流(即live自身)轉換為四個不同畫質的輸出流，並且將輸出流轉發至另一個自身的RTMP Application
            exec_push ffmpeg -i rtmp://localhost:1935/$app/$name
                        -c:v libx264 -c:a aac -b:v 800k  -b:a 128k  -vf "scale=w=640:h=360:force_original_aspect_ratio=decrease"  -tune zerolatency -preset superfast -crf 23 -f flv rtmp://localhost:1935/hls/$name_360p
                        -c:v libx264 -c:a aac -b:v 1400k  -b:a 384k -vf "scale=w=842:h=480:force_original_aspect_ratio=decrease"  -tune zerolatency -preset superfast -crf 23 -f flv rtmp://localhost:1935/hls/$name_480p
                        -c:v libx264 -c:a aac -b:v 2800k -b:a 384 -vf "scale=w=1280:h=720:force_original_aspect_ratio=decrease"  -tune zerolatency -preset superfast -crf 23 -f flv rtmp://localhost:1935/hls/$name_720p
                        -c:v libx264 -c:a aac -b:v 5000k -b:a 512k -vf "scale=w=1920:h=1080:force_original_aspect_ratio=decrease" -tune zerolatency -preset superfast -crf 23 -f flv rtmp://localhost:1935/hls/$name_1080p;
        }
        # 這是作為各畫質儲存用的
        application hls {
            live on; # 容許輸入
            deny play all; # 禁止用戶使用這個RTMP端點播放
            # 僅允許自身送的RTMP，這是因為這個端點只是用來接收上面轉送各畫質的RTMP流
            allow publish 127.0.0.1;
            deny publish all;
            hls on; # 啟用HLS
            hls_fragment 3;
            hls_playlist_length 30;
            hls_path /hls/; # HLS路徑
            hls_nested on; # 支援巢狀M3U8
            hls_continuous on; # 延續HLS的TS檔案編號
            hls_fragment_naming sequential; # HLS的TS檔案編號方法使用順序數字編號
            hls_cleanup off; # 直播重新開始時，不清除舊檔案(這邊是防止直播臨時停止後重開)
            # 針對各畫質設定頻寬(即M3U8檔案中會定義各HLS流適用的頻寬)
            # 這邊設定後將根據live輸入的$name產生對應的m3u8，如$name為`test`，則會在上面的`/hls`目錄內產生`test.m3u8`，並且對應各畫質的目錄如`test_360p`
            hls_variant _1080p BANDWIDTH=5000000; # High bitrate, HD 720p resolution
            hls_variant _720p BANDWIDTH=2500000; # High bitrate, higher-than-SD resolution
            hls_variant _480p BANDWIDTH=1400000; # Medium bitrate, SD resolution
            hls_variant _360p BANDWIDTH=800000; # Low bitrate, sub-SD resolution
        }
    }
}

http {
    sendfile on;
    keepalive_timeout 65;
    include       /etc/nginx/mime.types; # 引入預設的MIME類型
    default_type  application/octet-stream; # 預設的ContentType
    server {
        listen 80;
        # 容許跨域
        add_header 'Access-Control-Allow-Origin' '*' always;
        # 設定路由
        location /hls {
            # 對應到HLS目錄
            alias /hls;
            # M3U8檔案不CACHE
            location ~* \.m3u8$ {
                add_header 'Cache-Control' 'no-cache';
            }
        }
        # 設定index.html檔案
        location /index.html {
            alias /etc/nginx/assets/index.html;
        }
    }
}
